import alt from"alt";const glob=getGlobal(),setTimeout=alt.setTimeout||glob.setTimeout;var MpTypes;(function(a){a.Player="pl",a.Vehicle="v"})(MpTypes||(MpTypes={}));function uid(){const a=0|46656*Math.random(),b=0|46656*Math.random(),c=("000"+a.toString(36)).slice(-3),d=("000"+b.toString(36)).slice(-3);return c+d}function getEnvironment(){if(!alt.Player)return"cef";return alt.Player.local?"client":alt.Player?"server":void 0}function stringifyData(a){const b=getEnvironment();return JSON.stringify(a,(a,c)=>{if("client"===b||"server"===b&&c&&"object"==typeof c){let a;if(c instanceof alt.Player?a=MpTypes.Player:c instanceof alt.Vehicle&&(a=MpTypes.Vehicle),a)return{__t:a,i:c.id}}return c})}function parseData(a){const b=getEnvironment();return JSON.parse(a,(a,c)=>{if(("client"===b||"server"===b)&&c&&"object"==typeof c&&"string"==typeof c.__t&&"number"==typeof c.i&&2===Object.keys(c).length){const a=c.i,b=c.__t;switch(b){case MpTypes.Player:return alt.Player.getByID(a);case MpTypes.Vehicle:return alt.Vehicle.getByID(a);}}return c})}function promiseTimeout(a,b){return"number"==typeof b?Promise.race([new Promise((a,c)=>{setTimeout(()=>c("TIMEOUT"),b)}),a]):a}function getGlobal(){if("undefined"!=typeof global)return global;return"undefined"==typeof window?void 0:window}function requestNamespace(a){const b="__rpc:namespaces",c=(a,b)=>{if(!a.includes(b))return a.push(b),!0};if(glob){const d=glob[b]||[];if(!c(d,a))return!1;glob[b]=d}else{const d=alt.Player.local;if(d){const e=d.getMeta(b),f=e?JSON.parse(e):[];if(!c(f,a))return!1;d.setMeta(b,JSON.stringify(f))}}return!0}const environment=getEnvironment();if(!environment)throw"Unknown alt:V environment";const ERR_NOT_FOUND="PROCEDURE_NOT_FOUND",PROCESS_EVENT="__rpc:process",BROWSER_REGISTER="__rpc:browserRegister",TRIGGER_EVENT="__rpc:triggerEvent",TRIGGER_EVENT_BROWSERS="__rpc:triggerEventBrowsers",rpcListeners={},rpcPending={},rpcEvListeners={},rpcBrowsers=[],rpcBrowserProcedures={};let rpcNamespace="";function init(a){if(rpcNamespace)throw"Already initialized.";if(!a)throw"Must specify a namespace.";if(!requestNamespace(a))throw`Namespace "${a}" is already in use.`;rpcNamespace=a;const b=getEventName(PROCESS_EVENT),c=getEventName(TRIGGER_EVENT);alt.on(b,processEvent),"server"===environment&&alt.onClient(b,(a,b)=>processEvent(b,a)),"client"===environment&&(alt.onServer(b,processEvent),register("__rpc:callServer",([a,b,c],d)=>_callServer(a,b,{fenv:d.environment,noRet:c})),register("__rpc:callBrowsers",([a,b,c],d)=>_callBrowsers(null,a,b,{fenv:d.environment,noRet:c})),register(getEventName(TRIGGER_EVENT_BROWSERS),([a,b],d)=>{rpcBrowsers.forEach(e=>{_callBrowser(e,c,[a,b],{fenv:d.environment,noRet:1})})})),register(c,([a,b],c)=>callEvent(a,b,c))}function getEventName(a){return`${a}::${rpcNamespace}`}function requireNamespace(){if(!rpcNamespace)throw`You must first call rpc.init() with a namespace.`}function processEvent(a,b,c){const d=parseData(a),e=getEventName(PROCESS_EVENT);if(d.req){const a={id:d.id,environment:d.fenv||d.env,player:b},f={ret:1,id:d.id,env:environment};let g;switch(environment){case"server":g=a=>alt.emitClient(b,e,a);break;case"client":{"server"===d.env?g=a=>alt.emitServer(e,a):"cef"===d.env&&(a.browser=c,g=a=>c&&c.valid&&c.emit(e,a));break}case"cef":g=a=>alt.emit(e,a);}if(g){const b=callProcedure(d.name,d.args,a);d.noRet||b.then(a=>g(stringifyData({...f,res:a}))).catch(a=>g(stringifyData({...f,err:null===a?null:a})))}}else if(d.ret){const a=rpcPending[d.id];if("server"===environment&&a.player!==b)return;a&&(a.resolve(d.hasOwnProperty("err")?Promise.reject(d.err):d.res),delete rpcPending[d.id])}}async function callProcedure(a,b,c){const d=rpcListeners[a];if(!d)throw ERR_NOT_FOUND;return d(b,c)}function addWebView(a){if(requireNamespace(),"client"!==environment)throw"addWebView can only be used on the client";a.on(getEventName(PROCESS_EVENT),b=>processEvent(b,void 0,a)),a.on(getEventName(BROWSER_REGISTER),b=>{rpcBrowserProcedures[b]=a}),rpcBrowsers.push(a)}function register(a,b){if(requireNamespace(),2!==arguments.length)throw"register expects 2 arguments: \"name\" and \"cb\"";"cef"===environment&&alt.emit(getEventName(BROWSER_REGISTER),a),rpcListeners[a]=b}function unregister(a){if(1!==arguments.length)throw"unregister expects 1 argument: \"name\"";rpcListeners[a]=void 0}function call(a,b,c={}){return 1>arguments.length||3<arguments.length?Promise.reject("call expects 1 to 3 arguments: \"name\", optional \"args\", and optional \"options\""):promiseTimeout(callProcedure(a,b,{environment}),c.timeout)}function _callServer(a,b,c={}){switch(requireNamespace(),environment){case"server":return call(a,b);case"client":{const d=uid();return new Promise(e=>{c.noRet||(rpcPending[d]={resolve:e});const f={req:1,id:d,name:a,env:environment,args:b,...c};alt.emitServer(getEventName(PROCESS_EVENT),stringifyData(f))})}case"cef":return callClient("__rpc:callServer",[a,b,+c.noRet]);}}function callServer(a,b,c={}){if(requireNamespace(),1>arguments.length||3<arguments.length)return Promise.reject("callServer expects 1 to 3 arguments: \"name\", optional \"args\", and optional \"options\"");let d={};return c.noRet&&(d.noRet=1),promiseTimeout(_callServer(a,b,d),c.timeout)}function _callClient(a,b,c,d={}){switch(requireNamespace(),environment){case"client":return call(b,c);case"server":{const e=uid();return new Promise(f=>{d.noRet||(rpcPending[e]={resolve:f,player:a});const g={req:1,id:e,name:b,env:environment,args:c,...d};alt.emitClient(a,getEventName(PROCESS_EVENT),stringifyData(g))})}case"cef":{const a=uid();return new Promise(e=>{d.noRet||(rpcPending[a]={resolve:e});const f={req:1,id:a,name:b,env:environment,args:c,...d};alt.emit(getEventName(PROCESS_EVENT),stringifyData(f))})}}}function callClient(a,b,c,d={}){switch(requireNamespace(),environment){case"client":{if(d=c||{},c=b,b=a,a=null,1>arguments.length||3<arguments.length||"string"!=typeof b)return Promise.reject("callClient from the client expects 1 to 3 arguments: \"name\", optional \"args\", and optional \"options\"");break}case"server":{if(2>arguments.length||4<arguments.length||"object"!=typeof a)return Promise.reject("callClient from the server expects 2 to 4 arguments: \"player\", \"name\", optional \"args\", and optional \"options\"");break}case"cef":{if(d=c||{},c=b,b=a,a=null,1>arguments.length||3<arguments.length||"string"!=typeof b)return Promise.reject("callClient from the browser expects 1 to 3 arguments: \"name\", optional \"args\", and optional \"options\"");break}}let e={};return d.noRet&&(e.noRet=1),promiseTimeout(_callClient(a,b,c,e),d.timeout)}function _callBrowser(a,b,c,d={}){return a&&a.valid?(requireNamespace(),new Promise(e=>{const f=uid();d.noRet||(rpcPending[f]={resolve:e});const g={req:1,id:f,name:b,env:environment,args:c,...d};a.emit(getEventName(PROCESS_EVENT),stringifyData(g))})):Promise.reject("INVALID_BROWSER")}function _callBrowsers(a,b,c,d={}){switch(requireNamespace(),environment){case"client":const e=rpcBrowserProcedures[b];return e&&e.valid?_callBrowser(e,b,c,d):Promise.reject(ERR_NOT_FOUND);case"server":return _callClient(a,"__rpc:callBrowsers",[b,c,+d.noRet],d);case"cef":return _callClient(null,"__rpc:callBrowsers",[b,c,+d.noRet],d);}}function callBrowsers(a,b,c,d={}){requireNamespace();let e,f={};switch(environment){case"client":case"cef":if(d=c||{},c=b,b=a,1>arguments.length||3<arguments.length)return Promise.reject("callBrowsers from the client or browser expects 1 to 3 arguments: \"name\", optional \"args\", and optional \"options\"");d.noRet&&(f.noRet=1),e=_callBrowsers(null,b,c,f);break;case"server":if(2>arguments.length||4<arguments.length)return Promise.reject("callBrowsers from the server expects 2 to 4 arguments: \"player\", \"name\", optional \"args\", and optional \"options\"");d.noRet&&(f.noRet=1),e=_callBrowsers(a,b,c,f);}if(e)return promiseTimeout(e,d.timeout)}function callBrowser(a,b,c,d={}){if("client"!==environment)return Promise.reject("callBrowser can only be used in the client environment");if(2>arguments.length||4<arguments.length)return Promise.reject("callBrowser expects 2 to 4 arguments: \"browser\", \"name\", optional \"args\", and optional \"options\"");requireNamespace();let e={};return d.noRet&&(e.noRet=1),promiseTimeout(_callBrowser(a,b,c,e),d.timeout)}function callEvent(a,b,c){const d=rpcEvListeners[a];d&&d.forEach(a=>a(b,c))}function on(a,b){if(2!==arguments.length)throw"on expects 2 arguments: \"name\" and \"cb\"";const c=rpcEvListeners[a]||new Set;c.add(b),rpcEvListeners[a]=c}function off(a,b){if(2!==arguments.length)throw"off expects 2 arguments: \"name\" and \"cb\"";const c=rpcEvListeners[a];c&&c.delete(b)}function trigger(a,b){if(1>arguments.length||2<arguments.length)throw"trigger expects 1 or 2 arguments: \"name\", and optional \"args\"";callEvent(a,b,{environment})}function triggerClient(a,b,c){switch(requireNamespace(),environment){case"client":{if(c=b,b=a,a=null,1>arguments.length||2<arguments.length||"string"!=typeof b)throw"triggerClient from the client expects 1 or 2 arguments: \"name\", and optional \"args\"";break}case"server":{if(2>arguments.length||3<arguments.length||"object"!=typeof a)throw"triggerClient from the server expects 2 or 3 arguments: \"player\", \"name\", and optional \"args\"";break}case"cef":{if(c=b,b=a,a=null,1>arguments.length||2<arguments.length||"string"!=typeof b)throw"triggerClient from the browser expects 1 or 2 arguments: \"name\", and optional \"args\"";break}}_callClient(a,getEventName(TRIGGER_EVENT),[b,c],{noRet:1})}function triggerServer(a,b){if(1>arguments.length||2<arguments.length)throw"triggerServer expects 1 or 2 arguments: \"name\", and optional \"args\"";requireNamespace(),_callServer(getEventName(TRIGGER_EVENT),[a,b],{noRet:1})}function triggerBrowsers(a,b,c){switch(environment){case"client":case"cef":if(c=b,b=a,a=null,1>arguments.length||2<arguments.length)throw"triggerBrowsers from the client or browser expects 1 or 2 arguments: \"name\", and optional \"args\"";break;case"server":if(2>arguments.length||3<arguments.length)throw"triggerBrowsers from the server expects 2 or 3 arguments: \"player\", \"name\", and optional \"args\"";}requireNamespace(),_callClient(a,getEventName(TRIGGER_EVENT_BROWSERS),[b,c],{noRet:1})}function triggerBrowser(a,b,c){if("client"!==environment)throw"callBrowser can only be used in the client environment";if(2>arguments.length||4<arguments.length)throw"callBrowser expects 2 or 3 arguments: \"browser\", \"name\", and optional \"args\"";requireNamespace(),_callBrowser(a,getEventName(TRIGGER_EVENT),[b,c],{noRet:1})}var index={init,addWebView,register,unregister,call,callServer,callClient,callBrowsers,callBrowser,on,off,trigger,triggerServer,triggerClient,triggerBrowsers,triggerBrowser};export default index;export{addWebView,call,callBrowser,callBrowsers,callClient,callServer,init,off,on,register,trigger,triggerBrowser,triggerBrowsers,triggerClient,triggerServer,unregister};
